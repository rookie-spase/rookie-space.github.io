<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>面向对象三大特性</title>
    <link href="/2023/03/19/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7/"/>
    <url>/2023/03/19/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<blockquote><p>三大特性：封装，继承，多态</p></blockquote><h1 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h1><h2 id="struct"><a href="#struct" class="headerlink" title="struct"></a>struct</h2><p>一个struct就是几个数据类型的集合。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">A</span>&#123;</span><br>    <span class="hljs-type">int</span> age;<br>    <span class="hljs-type">char</span>* name;<br>    <span class="hljs-type">char</span>* work_place;<br>&#125;;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    A some_one;<br>    some_one.age = <span class="hljs-number">21</span>;<br>    some_one.name = <span class="hljs-string">&quot;ZhangSi&quot;</span>;<br>    some_one.work_place = <span class="hljs-string">&quot;ShangHai&quot;</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><p>main函数相对于结构体A来说是外人，main在结构体A之外。而main作为一个外人，将some_one中的数据给更改了。</p><p>问题：一个人的{名字,年龄,工作地点}被外人更改了；</p><p>解决办法：使用class加上访问控制</p><h2 id="class"><a href="#class" class="headerlink" title="class"></a>class</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>&#123;<br><span class="hljs-keyword">private</span>:<br>    <span class="hljs-type">int</span> age;<br>    <span class="hljs-type">char</span>* name;<br>    <span class="hljs-type">char</span>* work_place;<br>&#125;;<br></code></pre></td></tr></table></figure><p>Class是数据类型和函数的集合，class的数据类型和函数统称为<code>成员</code>，class可以指定哪些可以被外人看见。<br>上面的classA，将数据成员指定为private，意思是A的这三个成员不能被外人访问。<br>若是<code>public</code>，那么效果和structA一样。</p><p>所以，现在介绍的<code>访问控制符</code>有</p><ul><li>private</li><li>public</li></ul><p>还有个是<code>protected</code>，这个关键字需要和继承的特性一起说。</p><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p>那么，既然数据成员已经不能被外人直接修改，也不能被外人直接访问。</p><p>给这个<code>classA</code>的成员赋值的方法就需要一个叫<code>构造函数</code>的东西。</p><blockquote><p>构造函数就是代替了赋值；外界传递参数给这个函数，这个函数利用参数给自己的成员赋值</p></blockquote><ul><li>构造函数需要从外界获取参数-&gt;构造函数是public的</li><li>构造函数的名字和类名一样</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>&#123;<br><span class="hljs-keyword">private</span>:<br>    <span class="hljs-type">int</span> age;<br>    <span class="hljs-type">char</span>* name;<br>    <span class="hljs-type">char</span>* work_place;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-built_in">A</span>(<span class="hljs-type">int</span> age,<span class="hljs-type">char</span>* name,<span class="hljs-type">char</span>* work_place)&#123;<br>        <span class="hljs-keyword">this</span>.age = age;<br>        <span class="hljs-keyword">this</span>.name  = name;<br>        <span class="hljs-keyword">this</span>.work_place = work_place;<br>    &#125;<br>    <br>    <span class="hljs-comment">/*  更好的写法,结果是一样的，但这个效果要好一些</span><br><span class="hljs-comment">    A(int ae,char* nae,char* _place)</span><br><span class="hljs-comment">    :age(ae),name(nae),work_place(_place)&#123;&#125;</span><br><span class="hljs-comment">    */</span><br>    <br>    <span class="hljs-comment">/* 更更好的写法</span><br><span class="hljs-comment">    A(const int&amp; ae,const char* nae,const char* _place)</span><br><span class="hljs-comment">    :age(ae),name(nae),work_place(_place)&#123;&#125;</span><br><span class="hljs-comment">    */</span><br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-function">A <span class="hljs-title">some_one</span><span class="hljs-params">(<span class="hljs-number">21</span>,<span class="hljs-string">&quot;ZhangSi&quot;</span>,<span class="hljs-string">&quot;ShangHai&quot;</span>)</span></span>;<br><span class="hljs-comment">//    就创建好了</span><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><p>继承代表的是一种属于关系，鹰是一种鸟，鸟都会飞。继承就是拿来表示这个关系的</p>]]></content>
    
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/18/hello-world/"/>
    <url>/2023/03/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
